# DepMap Public 22Q4

##############
## Overview ##
##############

This DepMap release contains data from CRISPR knockout screens from project Achilles, as well as genomic characterization data from the CCLE project.

###############
## Pipelines ##
###############

### Achilles

This Achilles dataset contains the results of genome-scale CRISPR knockout screens for Achilles (Avana Cas9 library) and Achilles combined with Sanger's Project SCORE (KY Cas9 library) screens. The dataset was processed using the following steps:
- Sum raw readcounts by SequenceID and collapse pDNAs by median (removing sequences with fingerprinting issues, total reads below 500000 or less then 25 mean reads per guide)
- Normalize readcounts such that pDNA sequences have the same mode, and all other sequences have median of nonessentials that matches the median of nonessentials in the corresponding pDNA batch
- Remove intergenic/non-targeting controls, Cas9 guides with multiple alignments to a gene, guides with >5 genomic alignments, and sgRNAs with inconsistent signal (see DropReason of guide maps).
- NA sgRNAs with pDNA counts less than one millionth of the pDNA pool
- Calculate the mean reads per guide for each sequence. Sequences with more then 185 mean reads per guide are considered passing.
- Compute the log2-fold-change (LFC) from pDNA counts for each sequence. Collapse to a gene-level by taking the median of guides.
- Calculate the Null-Normalized Median Difference (NNMD) from the LFC using the following equation: (median(essentials) - medain(nonessentials)) / MAD(nonessentials).  Sequences must be below a threshold of -1.25 to be considered passing.
- Remove sequences that do not have a Pearson coefficient > .41 with at least one other sequence for the screen when looking at genes with the highest variance in gene effect across screens and libraries.
- Calculate the NNMD for each screen after averaging passing sequences. Screen must be below a threshold of -1.25 to be considered passing.
- NA out readcounts for pDNAs which correspond with a SNP in any guide in a vector for a given cell line (to correct ancestry bias), then recompute LFC.
- Compute the naive gene score by collapsing the passing LFC data to a screen x gene matrix.
- Prior to running Chronos, NA apparent outgrowths in readcounts.
- Run Chronos per library-screen type to generate screen-level gene effect scores, apply copy number correction, then scale such that median of common essentials is at -1.0 and median of nonessentials is at 0.  Concatenate gene effects from all libraries into a single ScreenGeneEffect matrix.
- Map all of the screen-level gene effects to their corresponding models, then run Harmonia on the Avana and KY to correct the batch effect in Cas9 data. Produces an integrated model-level CRISPRGeneEffect matrix.
- Using the CRISPRGeneEffect, identify pan-dependent genes as those for whom 90% of cell lines rank the gene above a given dependency cutoff. The cutoff is determined from the central minimum in a histogram of gene ranks in their 90th percentile least dependent line.
- For each Chronos gene effect score from both the ScreenGeneEffect and CRISPRGeneEffect, infer the probability that the score represents a true dependency. This is done using an EM step until convergence independently in each screen/model. The dependent distribution is given by the list of essential genes. The null distribution is determined from unexpressed gene scores in those cell lines that have expression data available, and from the nonessential gene list in the remainder.
The essential  and nonessential controls used throughout the analysis are the Hart reference nonessentials and the intersection of the Hart and Blomen essentials. See Hart et al., Mol. Syst. Biol, 2014 and Blomen et al., Science, 2015. Lists of these genes are provided as AchillesCommonEssentialControls.csv and AchillesNonessentialControls.csv.
Note that the source for copy number data varies by cell line. Copy number data indicated as 'Sanger WES' are based on the Sanger Institute whole exome sequencing data (COSMIC: http://cancer.sanger.ac.uk/cell_lines, EGA accession number: EGAD00001001039) reprocessed using CCLE pipelines. Copy number source was chosen according to the following logic:
- Broad WES for lines where available
- Broad SNP when Broad WES is not available and Sanger WES not available, or Sanger WES copy number has less correlation with logfold change than Broad SNP
- Sanger WES in all other cases

### Expression

CCLE expression data is quantified from RNAseq files using the GTEx pipelines. A detailed description of the pipelines and tool versions can be found here: https://github.com/broadinstitute/ccle_processing#rnaseq. We provide a subset of the data files outputted from this pipeline available on FireCloud. These are aligned to hg38.

### Copy number

CCLE WES copy number data is generated by running the GATK copy number pipeline aligned to hg38. Tutorials and descriptions of this method can be found here https://software.broadinstitute.org/gatk/documentation/article?id=11682, https://software.broadinstitute.org/gatk/documentation/article?id=11683. WES samples have been realigned to hg38 and run through this pipeline.

### Mutations

CCLE mutation calls are generated using Mutect2 and annotated and filtered downstream. Detailed documentation can be found here https://storage.googleapis.com/shared-portal-files/Tools/%5BDMC%20Communication%5D%2022Q4%20Mutation%20Pipeline%20Update.pdf

### Fusions

CCLE generates RNAseq based fusion calls using the STAR-Fusion pipeline. A comprehensive overview of how the STAR-Fusion pipeline works can be found here: https://github.com/STAR-Fusion/STAR-Fusion/wiki. We run STAR-Fusion version 1.6.0 using the plug-n-play resources available in the STAR-Fusion docs for gencode v29. We run the fusion calling with default parameters except we add the --no_annotation_filter and --min_FFPM 0 arguments to prevent filtering.

###########
## Files ##
###########

### README.txt

Description of all files contained in this release

### ScreenGeneEffect.csv

Pipeline: Achilles

_Post-Chronos_
Gene effect estimates for all screens Chronos processed by library, copy number corrected and scaled, then concatenated.
- Columns: Gene - Rows: ScreenID

### ScreenGeneEffectUncorrected.csv

Pipeline: Achilles

_Post-Chronos_
Gene effect estimates for all screens Chronos processed by library, then concatenated. No copy number correction or scaling.
- Columns: Gene - Rows: ScreenID

### ScreenNaiveGeneScore.csv

Pipeline: Achilles

_Post-Chronos_
LFC collapsed by mean of sequences and median of guides, computed per library-screen type then concatenated.
- Columns: Gene - Rows: ScreenID

### ScreenGeneDependency.csv

Pipeline: Achilles

_Post-Chronos_
Gene dependency probability estimates for all screens Chronos processed by library-screen type, then concatenated.
- Columns: Gene - Rows: ScreenID

### CRISPRScreenMap.csv

Pipeline: Achilles

_Post-Chronos_
Map from ModelID to all ScreenIDs combined to make up a given model's data in the CRISPRGeneEffect matrix.
Columns: - ModelID - ScreenID

### CRISPRGeneEffect.csv

Pipeline: Achilles

_Post-Chronos_
Gene effect estimates for all models, integrated using Harmonia.
- Columns: Gene - Rows: ModelID

### CRISPRGeneDependency.csv

Pipeline: Achilles

_Post-Chronos_
Gene dependency probability estimates for all models in the integrated gene effect.
- Columns: Gene - Rows: ModelID

### CRISPRInferredGuideEfficacy.csv

Pipeline: Achilles

_Post-Chronos_
The estimates for the efficacies of all reagents in the different libraries-screen types, computed from the Chronos runs.
Columns: - sgRNA - Efficacy

### CRISPRInferredModelGrowthRate.csv

Pipeline: Achilles

_Post-Chronos_
The estimates for the growth rate of all models in the different libraries-screen types, computed from the Chronos runs.
Columns: - ScreenID - Achilles-Avana-2D - Project-Score-KY

### CRISPRInferredModelEfficacy.csv

Pipeline: Achilles

_Post-Chronos_
The estimates for the efficacy of all models in the different libraries-screen types, computed from the Chronos runs.
Columns: - ModelID - Achilles-Avana-2D - Project-Score-KY

### CRISPRInferredSequenceOverdispersion.csv

Pipeline: Achilles

_Post-Chronos_
List of genes identified as dependencies across all lines. Each entry is separated by a newline.

### CRISPRInferredCommonEssentials.csv

Pipeline: Achilles

_Post-Chronos_
List of genes identified as dependencies across all lines. Each entry is separated by a newline.

### AchillesCommonEssentialControls.csv

Pipeline: Achilles

_Pre-Chronos file_

List of genes used as positive controls, intersection of Biomen (2014) and Hart (2015) essentials. Each entry is separated by a newline.
The scores of these genes are used as the dependent distribution for inferring dependency probability.

### AchillesNonessentialControls.csv

Pipeline: Achilles

_Pre-Chronos file_

List of genes used as negative controls (Hart (2014) nonessentials). Each entry is separated by a newline.

### AvanaRawReadcounts.csv

Pipeline: Achilles

_Pre-Chronos file_
Summed guide-level read counts for each sequence screened with the Avana Cas9 library.
-Columns: SequenceID - Rows: sgRNA

### KYRawReadcounts.csv

Pipeline: Achilles

_Pre-Chronos file_
Summed guide-level read counts for each sequence screened with the Sanger's KY Cas9 library.
-Columns: SequenceID - Rows: sgRNA

### AvanaLogfoldChange.csv

Pipeline: Achilles

_Pre-Chronos file_
Log2-fold-change from pDNA counts for each sequence screened with the Avana Cas9 Library.
-Columns: SequenceID - Rows: sgRNA

### KYLogfoldChange.csv

Pipeline: Achilles

_Pre-Chronos file_
Log2-fold-change from pDNA counts for each sequence screened with the Sanger's KY Cas9 Library.
-Columns: SequenceID - Rows: sgRNA

### AvanaGuideMap.csv

Pipeline: Achilles

_Pre-Chronos file_
Mapping of sgRNAs to Genes in the Avana Cas9 library.
Columns: - sgRNA: guide in vector - GenomeAlignment: alignment to hg38 - Gene: HUGO (entrez) - nAlignments: total number of alignments for a given sgRNA - UsedByChronos: boolean indicating if sgRNA was included in Chronos analysis - DropReason: why a guide was removed prior to Chronos analysis

### KYGuideMap.csv

Pipeline: Achilles

_Pre-Chronos file_
Mapping of sgRNAs to Genes in the Sanger's KY Cas9 library.
Columns: - sgRNA: guide in vector - GenomeAlignment: alignment to hg38 - Gene: HUGO (entrez) - nAlignments: total number of alignments for a given sgRNA - UsedByChronos: boolean indicating if sgRNA was included in Chronos analysis - DropReason: why a guide was removed prior to Chronos analysis

### ScreenSequenceMap.csv

Pipeline: Achilles

_Pre-Chronos file_
Mapping of SequenceIDs to ScreenID and related info.
Columns: - SequenceID - ScreenID - ModelConditionID - ModelID - ScreenType: 2DS = 2D standard - Library - Days - pDNABatch - PassesQC

### AchillesScreenQCReport.csv

Pipeline: Achilles

_Pre-Chronos file_
Screen-level quality control metrics.
Columns: - ScreenID - ScreenNNMD: null-normalized median difference (threshold of -1.25) - ScreenROCAUC: area under the Receiver Operating Characteristic curve for essential (positive) vs nonessentials (negative) controls - ScreenFPR: false positive rate, computed as fraction of nonessentials in the 15th percentile most depleted genes - ScreenMeanEssentialDepletion: mean LFC of essentials - ScreenMeanNonessentialDepletion: mean LFC of nonessentials - ScreenSTDEssentials: standard deviation of essential gene LFCs - ScreenSTDNonessentials: standard deviation of nonessential gene LFCs - PassesQC: boolean indicating if screen passes QC thresholds - CanInclude: boolean indicating if screen can be included in dataset - QCStatus: string describing QC status - HasCopyNumber: boolean indicating if screen has copy number data - ModelConditionID - ModelID - Library - ScreenType - CasActivity: percentage of cells remaining GFP negative on days 12-14 of cas9 activity assay as measured by FACs - ScreenDoublingTime: hours for cells to double - nPassingSequences: number of sequences that pass sequence-level QC - nIncludedSequences: number of sequences that can be included

### AchillesSequenceQCReport.csv

Pipeline: Achilles

_Pre-Chronos file_
Sequence-level quality control metrics.
Columns: - SequenceID - SequenceTotalReads: total number of raw readcounts - SequenceMeanReadsPerGuide: mean reads per guide following normalization (threshold of 185) - SequenceNNMD: null-normalized median difference (threshold of -1.25) - PassesQC: boolean indicating if sequence passes QC thresholds - CanInclude: boolean indicating if sequence can be included in dataset - QCStatus: string describing QC status - SequenceMaxCorr: max correlation of high variance genes with other sequences from same screen (threshold of 0.41) - ScreenID - ScreenPassesQC: boolean indicating if corresponding screen passes QC thresholds

### AchillesHighVarianceGeneControls.csv

Pipeline: Achilles

_Pre-Chronos file_
List of genes with variable gene effects across models and libraries. Used for sequence correlation in QC.

### OmicsExpressionGenesExpectedCountProfile.csv

Pipeline: Expression

RNAseq read count data from RSEM.

- Rows: Omics Profile IDs
- Columns: genes (HGNC symbol and Ensembl ID)

### OmicsExpressionProteinCodingGenesTPMLogp1.csv

Pipeline: Expression

Gene expression TPM values of the protein coding genes for DepMap cell lines. Values are inferred from RNA-seq data using the RSEM tool and are reported after log2 transformation, using a pseudo-count of 1; log2(TPM+1).

Additional RNA-seq-based expression measurements are available for download as part of the full DepMap Data Release

More information on the DepMap Omics processing pipeline is available at <https://github.com/broadinstitute/depmap_omics>.


### OmicsExpressionTranscriptsExpectedCountProfile.csv

Pipeline: Expression

RNAseq read count data from RSEM.

- Rows: Omics Profile IDs
- Columns: transcripts (HGNC symbol and ensembl transcript ID)

### OmicsCNSegmentsProfile.csv

Pipeline: Copy number


Segment level copy number data
- Profile ID
- Chromosome
- Start (bp start of the segment)
- End (bp end of the segment)
- Num_Probes (the number of targeting probes that make up this segment)
- Segment_Mean (relative copy ratio for that segment)
- amplification status (+,-,0)

### OmicsCNGene.csv

Pipeline: Copy number

Gene-level copy number data that is log2 transformed with a pseudo-count of 1; log2(CN ratio + 1) . Inferred from WGS, WES or SNP array depending on the availability of the data type. Values are calculated by mapping genes onto the segment level calls and computing a weighted average along the genomic coordinate.

Additional copy number datasets are available for download as part of the full DepMap Data Release.

More information on the DepMap Omics processing pipeline is available at <https://github.com/broadinstitute/depmap_omics>.


### OmicsFusionFiltered.csv

Pipeline: Fusions

Gene fusion data derived from RNAseq data. Data is filtered using by performing the following:

- Removing fusion involving mitochondrial chromosomes or HLA genes
- Removed common false positive fusions (red herring annotations as described in the STAR-Fusion docs)
- Recurrent fusions observed in CCLE across cell lines (in 10% or more of the samples)
- Removed fusions where SpliceType='INCL_NON_REF_SPLICE' and LargeAnchorSupport='NO_LDAS' and FFPM < 0.1
- FFPM < 0.05
Column descriptions can be found in the STAR-Fusion wiki, except for CCLE_count, which indicates the number of CCLE samples that have this fusion.

### OmicsFusionUnfilteredProfile.csv

Pipeline: Fusions

Gene fusion data derived from RNAseq data. Data is unfiltered. Column descriptions can be found in the STAR-Fusion wiki.
Samples are identified by Profile IDs.

### OmicsSomaticMutations.csv

Pipeline: Mutations

MAF file containing information on all the somatic point mutations and indels called in the DepMap cell lines. The calls are generated from Mutect2. A description of the various columns is in the DepMap Release README file.

Additional processed mutation matrices containing genotyped mutation calls are available for download as part of the full DepMap Data Release.

More information on the DepMap Omics processing pipeline is available at <https://github.com/broadinstitute/depmap_omics>.

More information on the mutation pipeline and descriptions of the columns in the MAF can be found here: <https://storage.googleapis.com/shared-portal-files/Tools/%5BDMC%20Communication%5D%2022Q4%20Mutation%20Pipeline%20Update.pdf>


### OmicsSomaticMutationsProfile.csv

Pipeline: Mutations

MAF file containing information on all the somatic point mutations and indels called in the DepMap cell lines. The calls are generated from Mutect2. A description of the various columns is in the DepMap Release README file.

Additional processed mutation matrices containing genotyped mutation calls are available for download as part of the full DepMap Data Release.

Samples are identified by Profile IDs.


### OmicsSomaticMutationsMatrixHotspot.csv

Pipeline: Mutations

Genotyped matrix determining for each cell line whether each gene has at least one hot spot mutation (as identified by Hess et al. 2019). (0 == no mutation; 1 == heterozygous mutation; 2 == homozygous mutation)

### OmicsSomaticMutationsMatrixDamaging.csv

Pipeline: Mutations

Genotyped matrix determining for each cell line whether each gene has at least one damaging mutation. (0 == no mutation; 1 == heterozygous mutation; 2 == homozygous mutation)

### OmicsExpressionGeneSetEnrichment.csv

Pipeline: Expression

Single Sample Gene Set Enrichment Analysis
Scores were calculated using Single Sample Gene Set Enrichment Analysis
based on the z-scores of the log2(tpm + 1) of gene-level expression data.
Details about the R script used to run the analysis
can be found here: https://github.com/broadinstitute/ssGSEA2.0
- Columns: gene set enrichment pathways
- Rows: Model IDs

### OmicsExpressionGeneSetEnrichmentProfile.csv

Pipeline: Expression

Single Sample Gene Set Enrichment Analysis
Scores were calculated using Single Sample Gene Set Enrichment Analysis
based on the z-scores of the log2(tpm + 1) of gene-level expression data.
Details about the R script used to run the analysis
can be found here: https://github.com/broadinstitute/ssGSEA2.0
- Columns: gene set enrichment pathways
- Rows: Omics Profile IDs

### OmicsProfiles.csv

Profile ID mapping information
Columns: ProfileID, ModelID, ModelConditionID, and Datatype
Rows: ProfileID

### OmicsDefaultModelProfiles.csv

indicates which profiles are selected in the model-level datasets
Columns: ModelID, ProfileID, and ProfileType (dna/rna/CN only)

### OmicsDefaultModelConditionProfiles.csv

indicates which profiles are selected for each model condition
Columns: ModelConditionID, ProfileID, and ProfileType (dna/rna/CN only)

### OmicsGuideMutationsBinaryKY.csv

binary matrix indicating whether there are mutations in guide locations from the KY library.
KY guide library (same as the one used in project Score) can be accessed from https://score.depmap.sanger.ac.uk/downloads.
Columns: chrom, start, end, sgRNA, and ModelIDs

### OmicsGuideMutationsBinaryHumagne.csv

binary matrix indicating whether there are mutations in guide locations from the Humangne library.
Humagne guide library can be accessed from Addgene (https://www.addgene.org/pooled-library/broadgpp-human-knockout-humagne/).
Columns: chrom, start, end, sgRNA, and ModelIDs

### OmicsGuideMutationsBinaryAvana.csv

binary matrix indicating whether there are mutations in guide locations from the Avana library.
Avana guide library can be accessed from AvanaGuideMap.csv.
Columns: chrom, start, end, sgRNA, and ModelIDs

### Model.csv

Metadata describing all cancer models/cell lines which are referenced by a dataset contained within the DepMap portal.
Columns:
- ModelID: Static primary key assigned by DepMap to each cell line
- PatientID: Identifies the patient from which this model was derived.
- CellLineName: Original cell line name, including punctuation
- StrippedCellLineName: Cell line name with alphanumeric characters only
- GrowthPattern: Typical growth pattern of the cell line and the format of the model when it was onboarded.
- MolecularSubtype: Subtype as determined by well known molecular markers
- SampleCollectionSite: Tissue collection site
- Sex: Sex of tissue donor if known
- Age: If known, age of tissue donor at time of sample collection
- PrimaryOrMetastasis: Indicates whether tissue sample is from primary or metastatic site
- SourceType: Source of cell line vial used by DepMap
- SourceDetail: Source of cell line vial used by DepMap
- COSMICID: Cell line ID used in Cosmic cancer database
- WTSIMasterCellID: ID of corresponding record in Sanger Drug dataset
- CCLEName: Previous naming system that used the stripped cell line name followed by the lineage; no longer assigned to new cell lines
- DepmapPublicComments: Further information about the cell line
- RRID: Cellosaurus research resource identifier
- OncotreeCode, OncotreeSubtype, OncotreePrimaryDisease, OncotreeLineage: Classification of the model using oncotree's nomenclature 

### Media.csv

The media used for the assay
Columns:
- MediaID: ID for each unique media used
- Description: Human readable description of the media composition
All other columns list fractions of specific specific components the media 

### ModelCondition.csv

The conditions under which the model was assayed.
Columns:
- ModelConditionID: Static primary key assigned by DepMap to each model condition
- ModelID: The ID of the associated model/cell line
- Source: Whether the assay was performed at the Broad or Sanger
- CellFormat: Whether the cell line was grown as an adherent line or suspension
- Drug: If populated, a compound which the model was treated within the context of the assay
- MediaID: The media the model was grown in the course of the assay 

